<Window x:Class="MiniPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MiniPlayer"
        xmlns:converters="clr-namespace:MiniPlayer.Converters"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" d:DataContext="{d:DesignInstance Type=local:CurrentDir}"
        mc:Ignorable="d"
        Icon="/MiniPlayer;component/Assert/favicon.ico"
        Title="MiniPlayer" Background="Black" ResizeMode="NoResize" WindowState="Normal" WindowStyle="None" 
        AllowsTransparency="True"
        Activated="MainWindow_Activated" >
    <Window.Resources>
        <ResourceDictionary>
            <!-- 合併外部 Style -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/StyleResource.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- 設定lvFileList欄位寬度用 -->
            <converters:WidthConverter x:Key="WidthConverter" />

            <!-- 剪貼簿管理器，控制右鍵 context menu 的項目 -->
            <local:MenuItemStatus x:Key="MenuItemStatus" />
            <ContextMenu x:Key="RightClickContextMenu">
                <ContextMenu.Resources>
                    <Style TargetType="MenuItem">
                        <Setter Property="Margin" Value="0,5,0,5"/>
                    </Style>
                </ContextMenu.Resources>
                <MenuItem Header="開啟" FontSize="33" Click="MenuItem_Open_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=OpenVisiblity}"/>
                <Separator Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=OpenVisiblity}"/>
                
                <MenuItem Header="退出" FontSize="33" Click="MenuItem_Remove_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=RemoveVisiblity}"/>
                <Separator Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=RemoveVisiblity}"/>
                
                <MenuItem Header="剪下" FontSize="33" Click="MenuItem_Cut_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=CutVisiblity}"/>
                <MenuItem Header="複製" FontSize="33" Click="MenuItem_Copy_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=CopyVisiblity}"/>
                <MenuItem Header="貼上" FontSize="33" Click="MenuItem_Paste_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=PasteVisiblity}"/>

                <Separator Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=DeleteVisiblity}"/>
                <MenuItem Header="刪除" FontSize="33" Click="MenuItem_Delete_Click" Visibility="{Binding Source={StaticResource MenuItemStatus}, Path=DeleteVisiblity}"/>
            </ContextMenu>

        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>

        <TabControl Grid.Row="1" Grid.Column="1">
            <TabItem Header="Power Pannel">
                <Grid x:Name="PowerPanelMain">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25*"/>
                        <RowDefinition Height="50*"/>
                        <RowDefinition Height="25*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33*"/>
                        <ColumnDefinition Width="34*"/>
                        <ColumnDefinition Width="33*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="5*"/>
                            <RowDefinition Height="5*"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="btnSleep" Grid.Row="0" Style="{StaticResource PowerPanelStyle}" Background="Yellow" Click="btnSleep_Click">
                            <Viewbox>
                                <TextBlock Style="{StaticResource NotoText}" Text="休眠" />
                            </Viewbox>
                        </Button>
                        <Button x:Name="btnReboot" Grid.Row="1" Style="{StaticResource PowerPanelStyle}" Background="Orange" Click="btnReboot_Click">
                            <Viewbox>
                                <TextBlock Style="{StaticResource NotoText}" Text="重開機"/>
                            </Viewbox>
                        </Button>
                        <Button x:Name="btnShutdown" Grid.Row="2" Style="{StaticResource PowerPanelStyle}" Background="Red" Click="btnShutdown_Click">
                            <Viewbox>
                                <TextBlock Style="{StaticResource NotoText}" Text="關機" />
                            </Viewbox>
                        </Button>
                    </Grid>
                    <Viewbox Grid.Row="2" Grid.Column="2" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <TextBlock x:Name="PowerPanelClock" Style="{StaticResource NotoText}" Text=""/>
                    </Viewbox>
                </Grid>
            </TabItem>

            <TabItem Header="File Browser">
                <Grid x:Name="FileBrowserMain"  Background="#F4F4F4">
                    
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Background" Value="#F4F4F4"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25*"/>
                        <ColumnDefinition Width="75*"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="TreeView" Grid.Column="0">
                        <Border BorderThickness="0" Background="#F4F4F4">
                            <TreeView x:Name="tvNVPane"
                                      PreviewMouseLeftButtonDown="tvNVPane_PreviewMouseLeftButtonDown"
                                      KeyDown="tvNVPane_KeyDown" 
                                      Background="White" Margin="5,5,0,5"
                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      FontSize="28" >
                                <TreeView.Resources>

                                    <HierarchicalDataTemplate DataType="{x:Type local:FileSystemItem}" ItemsSource="{Binding ChildrenView}">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="{Binding Icon}" Margin="0,0,5,0"/>
                                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>

                                <TreeView.ItemsSource>
                                    <Binding Path="TreeViewRootItems"/>
                                </TreeView.ItemsSource>

                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource FileTreeView}">
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                        <Setter Property="local:TreeViewItemHelper.AutoScrollOnSelect" Value="True"/>
                                        <EventSetter Event="TreeViewItem.Expanded" Handler="TreeViewItem_Expanded"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </Border>
                    </Grid>

                    <Grid x:Name="FileList" Grid.Column="1" Margin="0,5,5,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderThickness="0" Background="#F4F4F4">
                            <DockPanel Height="40" Margin="5">
                                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,5,0">
                                    <Button x:Name="btnBack" Content="←" IsEnabled="False" Style="{StaticResource btnNavi}" Click="btnBack_Click" />
                                    <Button x:Name="btnNext" Content="→" IsEnabled="False" Style="{StaticResource btnNavi}" Click="btnNext_Click"/>
                                    <Button x:Name="btnUp" Content="↑" IsEnabled="False" Style="{StaticResource btnNavi}" Click="btnUp_Click"/>
                                </StackPanel>

                                <TextBox x:Name="tbPath" Text="{Binding CurrentDir.CurrentItem.FullPath}" VerticalContentAlignment="Center" IsReadOnly="True"/>
                            </DockPanel>
                        </Border>

                        <Border Grid.Row="1"  BorderThickness="0" Background="#F4F4F4">
                            <ListView x:Name="lvFileList" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                      SelectionMode ="Extended"
                                      ContextMenuOpening="lvFileList_ContextMenuOpening"
                                      ContextMenu="{StaticResource RightClickContextMenu}"
                                      PreviewMouseLeftButtonDown="lvFileList_PreviewMouseLeftButtonDown"
                                      PreviewMouseMove="lvFileList_PreviewMouseMove"
                                      PreviewMouseLeftButtonUp="lvFileList_PreviewMouseLeftButtonUp">
                                <ListView.ItemsSource>
                                    <Binding Path="CurrentDirectoryItemsView"/>
                                </ListView.ItemsSource>

                                <ListView.ItemContainerStyle >
                                    <Style TargetType="ListViewItem" BasedOn="{StaticResource FileListViewItemStyle}">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>

                                        <Setter Property="ContextMenu" Value="{StaticResource RightClickContextMenu}" />

                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="名稱"
                                                    Width="{Binding RelativeSource={RelativeSource AncestorType=ListView},
                                                    Path=ActualWidth, Converter={StaticResource WidthConverter}}">
                                            <GridViewColumn.HeaderContainerStyle>
                                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Setter Property="FontSize" Value="33"/>
                                                </Style>
                                            </GridViewColumn.HeaderContainerStyle>

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                        <Image Source="{Binding Icon, Mode=OneWay}" Margin="0,0,5,0"/>
                                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel x:Name="GlobalButton" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right" Orientation="Horizontal">
            <Button x:Name="btnMini" Style="{StaticResource btnMiniStyle}" Click="btnMini_Click"/>
            <Button x:Name="btnExit" Style="{StaticResource btnExitStyle}" Click="btnExit_Click"/>
        </StackPanel>

    </Grid>

</Window>
